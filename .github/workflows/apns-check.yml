name: Check Intune APNs Certificate & Notify

on:
  schedule:
    - cron: "0 3 * * *"     # daily 03:00 UTC
  workflow_dispatch: {}

permissions:
  id-token: write           # OIDC
  contents: read

jobs:
  check-apns:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure OIDC login (no client secret)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}   # App (client) ID from Entra
          tenant-id:  ${{ secrets.AZURE_TENANT_ID }}  # Tenant ID GUID
          allow-no-subscriptions: true

      - name: Install Azure CLI
        uses: azure/cli@v2

      - name: Check APNs & send email
        shell: pwsh
        env:
          NOTIFY_WINDOW_DAYS: "7"
          MAIL_SENDER_UPN:    "Amit@webminesllc.us"   # send as
          MAIL_RECIPIENT:     "Amit@webminesllc.us"   # send to
        run: |
          # Acquire Graph token from OIDC session
          $token = az account get-access-token --resource https://graph.microsoft.com --query accessToken -o tsv
          if (-not $token) { throw "Failed to acquire Graph token." }
          $headers = @{ Authorization = "Bearer $token" }

          # Query APNs certificate
          $url = "https://graph.microsoft.com/v1.0/devicemanagement/applePushNotificationCertificate"
          try {
            $apns = Invoke-RestMethod -Uri $url -Headers $headers -Method GET -ErrorAction Stop
          } catch {
            throw "Graph call failed: $($_.Exception.Message)"
          }
          if (-not $apns) { Write-Host "No APNs payload returned."; exit 0 }

          # Decide notification
          $expiry = [datetime]::Parse($apns.expirationDateTime)
          $now    = Get-Date
          $days   = [int]([timespan]($expiry - $now)).TotalDays
          $window = [int]$env:NOTIFY_WINDOW_DAYS

          Write-Host "APNs expiry: $expiry (Days left: $days)"

          $needsNotify = $false
          if ($expiry -lt $now) {
            $needsNotify = $true
            $subject = "MSIntune: IMPORTANT - Apple MDM Push certificate has expired"
            $body = @"
<p><b>ACTION REQUIRED</b>: The Apple MDM Push (APNs) certificate has <b>expired</b>.</p>
<p>Expiry: $expiry (Days left: $days)</p>
<p>Renew in Intune &gt; Tenant admin &gt; Apple MDM Push certificate.</p>
"@
          } elseif ($days -le $window) {
            $needsNotify = $true
            $subject = "MSIntune: Apple MDM Push certificate expires in $days day(s)"
            $body = @"
<p>Please take action before the Apple MDM Push (APNs) certificate expires.</p>
<p>Expiry: $expiry (Days left: $days)</p>
"@
          } else {
            Write-Host "APNs is healthy and outside the $window-day window."
          }

          if (-not $needsNotify) { exit 0 }

          # Send email via Graph (app-only)
          $mailPayload = @{
            message = @{
              subject = $subject
              body = @{
                contentType = "HTML"
                content     = $body
              }
              toRecipients = @(@{ emailAddress = @{ address = $env:MAIL_RECIPIENT } })
            }
            saveToSentItems = $true
          } | ConvertTo-Json -Depth 6

          $sendUrl = "https://graph.microsoft.com/v1.0/users/$($env:MAIL_SENDER_UPN)/sendMail"
          try {
            Invoke-RestMethod -Uri $sendUrl -Method POST -Headers $headers -Body $mailPayload -ContentType "application/json" -ErrorAction Stop
            Write-Host "Notification email sent to $($env:MAIL_RECIPIENT) from $($env:MAIL_SENDER_UPN)"
          } catch {
            throw "Failed to send email via Graph: $($_.Exception.Message)"
          }
